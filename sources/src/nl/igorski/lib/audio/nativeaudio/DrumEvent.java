/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package nl.igorski.lib.audio.nativeaudio;

public class DrumEvent extends SampleEvent {
  private long swigCPtr;

  protected DrumEvent(long cPtr, boolean cMemoryOwn) {
    super(NativeAudioEngineJNI.DrumEvent_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(DrumEvent obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        NativeAudioEngineJNI.delete_DrumEvent(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public DrumEvent(int aPosition, int aDrumType, int aDrumTimbre, BaseInstrument aInstrument) {
    this(NativeAudioEngineJNI.new_DrumEvent(aPosition, aDrumType, aDrumTimbre, BaseInstrument.getCPtr(aInstrument), aInstrument), true);
  }

  public void setPosition(int value) {
    NativeAudioEngineJNI.DrumEvent_position_set(swigCPtr, this, value);
  }

  public int getPosition() {
    return NativeAudioEngineJNI.DrumEvent_position_get(swigCPtr, this);
  }

  public int getTimbre() {
    return NativeAudioEngineJNI.DrumEvent_getTimbre(swigCPtr, this);
  }

  public void setTimbre(int aTimbre) {
    NativeAudioEngineJNI.DrumEvent_setTimbre(swigCPtr, this, aTimbre);
  }

  public int getType() {
    return NativeAudioEngineJNI.DrumEvent_getType(swigCPtr, this);
  }

  public void setType(int aType) {
    NativeAudioEngineJNI.DrumEvent_setType(swigCPtr, this, aType);
  }

  public void unlock() {
    NativeAudioEngineJNI.DrumEvent_unlock(swigCPtr, this);
  }

}
