/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package nl.igorski.lib.audio.nativeaudio;

public class SynthEvent extends BaseSynthEvent {
  private long swigCPtr;

  protected SynthEvent(long cPtr, boolean cMemoryOwn) {
    super(NativeAudioEngineJNI.SynthEvent_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(SynthEvent obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        NativeAudioEngineJNI.delete_SynthEvent(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public SynthEvent(float aFrequency, int aPosition, float aLength, SynthInstrument aInstrument, boolean aAutoCache) {
    this(NativeAudioEngineJNI.new_SynthEvent__SWIG_0(aFrequency, aPosition, aLength, SynthInstrument.getCPtr(aInstrument), aInstrument, aAutoCache), true);
  }

  public SynthEvent(float aFrequency, int aPosition, float aLength, SynthInstrument aInstrument, boolean aAutoCache, boolean hasParent) {
    this(NativeAudioEngineJNI.new_SynthEvent__SWIG_1(aFrequency, aPosition, aLength, SynthInstrument.getCPtr(aInstrument), aInstrument, aAutoCache, hasParent), true);
  }

  public SynthEvent() {
    this(NativeAudioEngineJNI.new_SynthEvent__SWIG_2(), true);
  }

  public SynthEvent(float aFrequency, SynthInstrument aInstrument) {
    this(NativeAudioEngineJNI.new_SynthEvent__SWIG_3(aFrequency, SynthInstrument.getCPtr(aInstrument), aInstrument), true);
  }

  public SynthEvent(float aFrequency, SynthInstrument aInstrument, boolean hasParent) {
    this(NativeAudioEngineJNI.new_SynthEvent__SWIG_4(aFrequency, SynthInstrument.getCPtr(aInstrument), aInstrument, hasParent), true);
  }

  public void setFrequency(float aFrequency) {
    NativeAudioEngineJNI.SynthEvent_setFrequency__SWIG_0(swigCPtr, this, aFrequency);
  }

  public void setFrequency(float aFrequency, boolean allOscillators, boolean storeAsBaseFrequency) {
    NativeAudioEngineJNI.SynthEvent_setFrequency__SWIG_1(swigCPtr, this, aFrequency, allOscillators, storeAsBaseFrequency);
  }

  public void enqueueFrequency(float aFrequency) {
    NativeAudioEngineJNI.SynthEvent_enqueueFrequency(swigCPtr, this, aFrequency);
  }

  public float getBaseFrequency() {
    return NativeAudioEngineJNI.SynthEvent_getBaseFrequency(swigCPtr, this);
  }

  public void invalidateProperties(int aPosition, float aLength, SynthInstrument aInstrument) {
    NativeAudioEngineJNI.SynthEvent_invalidateProperties(swigCPtr, this, aPosition, aLength, SynthInstrument.getCPtr(aInstrument), aInstrument);
  }

  public void calculateBuffers() {
    NativeAudioEngineJNI.SynthEvent_calculateBuffers(swigCPtr, this);
  }

  public void cache(boolean doCallback) {
    NativeAudioEngineJNI.SynthEvent_cache(swigCPtr, this, doCallback);
  }

}
