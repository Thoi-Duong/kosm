/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package nl.igorski.lib.audio.nativeaudio;

public class SynthInstrument extends BaseInstrument {
  private long swigCPtr;

  protected SynthInstrument(long cPtr, boolean cMemoryOwn) {
    super(NativeAudioEngineJNI.SynthInstrument_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(SynthInstrument obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        NativeAudioEngineJNI.delete_SynthInstrument(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public SynthInstrument() {
    this(NativeAudioEngineJNI.new_SynthInstrument(), true);
  }

  public void setWaveform(int value) {
    NativeAudioEngineJNI.SynthInstrument_waveform_set(swigCPtr, this, value);
  }

  public int getWaveform() {
    return NativeAudioEngineJNI.SynthInstrument_waveform_get(swigCPtr, this);
  }

  public void setOctave(int value) {
    NativeAudioEngineJNI.SynthInstrument_octave_set(swigCPtr, this, value);
  }

  public int getOctave() {
    return NativeAudioEngineJNI.SynthInstrument_octave_get(swigCPtr, this);
  }

  public void setKeyboardOctave(int value) {
    NativeAudioEngineJNI.SynthInstrument_keyboardOctave_set(swigCPtr, this, value);
  }

  public int getKeyboardOctave() {
    return NativeAudioEngineJNI.SynthInstrument_keyboardOctave_get(swigCPtr, this);
  }

  public void setAdsr(ADSR value) {
    NativeAudioEngineJNI.SynthInstrument_adsr_set(swigCPtr, this, ADSR.getCPtr(value), value);
  }

  public ADSR getAdsr() {
    long cPtr = NativeAudioEngineJNI.SynthInstrument_adsr_get(swigCPtr, this);
    return (cPtr == 0) ? null : new ADSR(cPtr, false);
  }

  public void setKeyboardVolume(float value) {
    NativeAudioEngineJNI.SynthInstrument_keyboardVolume_set(swigCPtr, this, value);
  }

  public float getKeyboardVolume() {
    return NativeAudioEngineJNI.SynthInstrument_keyboardVolume_get(swigCPtr, this);
  }

  public void setROsc(RouteableOscillator value) {
    NativeAudioEngineJNI.SynthInstrument_rOsc_set(swigCPtr, this, RouteableOscillator.getCPtr(value), value);
  }

  public RouteableOscillator getROsc() {
    long cPtr = NativeAudioEngineJNI.SynthInstrument_rOsc_get(swigCPtr, this);
    return (cPtr == 0) ? null : new RouteableOscillator(cPtr, false);
  }

  public void setOsc2active(boolean value) {
    NativeAudioEngineJNI.SynthInstrument_osc2active_set(swigCPtr, this, value);
  }

  public boolean getOsc2active() {
    return NativeAudioEngineJNI.SynthInstrument_osc2active_get(swigCPtr, this);
  }

  public void setOsc2waveform(int value) {
    NativeAudioEngineJNI.SynthInstrument_osc2waveform_set(swigCPtr, this, value);
  }

  public int getOsc2waveform() {
    return NativeAudioEngineJNI.SynthInstrument_osc2waveform_get(swigCPtr, this);
  }

  public void setOsc2detune(float value) {
    NativeAudioEngineJNI.SynthInstrument_osc2detune_set(swigCPtr, this, value);
  }

  public float getOsc2detune() {
    return NativeAudioEngineJNI.SynthInstrument_osc2detune_get(swigCPtr, this);
  }

  public void setOsc2octaveShift(int value) {
    NativeAudioEngineJNI.SynthInstrument_osc2octaveShift_set(swigCPtr, this, value);
  }

  public int getOsc2octaveShift() {
    return NativeAudioEngineJNI.SynthInstrument_osc2octaveShift_get(swigCPtr, this);
  }

  public void setOsc2fineShift(int value) {
    NativeAudioEngineJNI.SynthInstrument_osc2fineShift_set(swigCPtr, this, value);
  }

  public int getOsc2fineShift() {
    return NativeAudioEngineJNI.SynthInstrument_osc2fineShift_get(swigCPtr, this);
  }

  public void setArpeggiator(Arpeggiator value) {
    NativeAudioEngineJNI.SynthInstrument_arpeggiator_set(swigCPtr, this, Arpeggiator.getCPtr(value), value);
  }

  public Arpeggiator getArpeggiator() {
    long cPtr = NativeAudioEngineJNI.SynthInstrument_arpeggiator_get(swigCPtr, this);
    return (cPtr == 0) ? null : new Arpeggiator(cPtr, false);
  }

  public void setArpeggiatorActive(boolean value) {
    NativeAudioEngineJNI.SynthInstrument_arpeggiatorActive_set(swigCPtr, this, value);
  }

  public boolean getArpeggiatorActive() {
    return NativeAudioEngineJNI.SynthInstrument_arpeggiatorActive_get(swigCPtr, this);
  }

  public void setAudioEvents(SWIGTYPE_p_std__vectorT_BaseAudioEvent_p_t value) {
    NativeAudioEngineJNI.SynthInstrument_audioEvents_set(swigCPtr, this, SWIGTYPE_p_std__vectorT_BaseAudioEvent_p_t.getCPtr(value));
  }

  public SWIGTYPE_p_std__vectorT_BaseAudioEvent_p_t getAudioEvents() {
    long cPtr = NativeAudioEngineJNI.SynthInstrument_audioEvents_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_std__vectorT_BaseAudioEvent_p_t(cPtr, false);
  }

  public void setLiveAudioEvents(SWIGTYPE_p_std__vectorT_BaseAudioEvent_p_t value) {
    NativeAudioEngineJNI.SynthInstrument_liveAudioEvents_set(swigCPtr, this, SWIGTYPE_p_std__vectorT_BaseAudioEvent_p_t.getCPtr(value));
  }

  public SWIGTYPE_p_std__vectorT_BaseAudioEvent_p_t getLiveAudioEvents() {
    long cPtr = NativeAudioEngineJNI.SynthInstrument_liveAudioEvents_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_std__vectorT_BaseAudioEvent_p_t(cPtr, false);
  }

  public boolean hasEvents() {
    return NativeAudioEngineJNI.SynthInstrument_hasEvents(swigCPtr, this);
  }

  public boolean hasLiveEvents() {
    return NativeAudioEngineJNI.SynthInstrument_hasLiveEvents(swigCPtr, this);
  }

  public void updateEvents() {
    NativeAudioEngineJNI.SynthInstrument_updateEvents(swigCPtr, this);
  }

  public void clearEvents() {
    NativeAudioEngineJNI.SynthInstrument_clearEvents(swigCPtr, this);
  }

  public boolean removeEvent(BaseAudioEvent aEvent) {
    return NativeAudioEngineJNI.SynthInstrument_removeEvent(swigCPtr, this, BaseAudioEvent.getCPtr(aEvent), aEvent);
  }

  public SWIGTYPE_p_std__vectorT_BaseAudioEvent_p_t getEvents() {
    long cPtr = NativeAudioEngineJNI.SynthInstrument_getEvents(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_std__vectorT_BaseAudioEvent_p_t(cPtr, false);
  }

  public SWIGTYPE_p_std__vectorT_BaseAudioEvent_p_t getLiveEvents() {
    long cPtr = NativeAudioEngineJNI.SynthInstrument_getLiveEvents(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_std__vectorT_BaseAudioEvent_p_t(cPtr, false);
  }

}
