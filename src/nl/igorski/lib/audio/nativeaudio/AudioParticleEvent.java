/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package nl.igorski.lib.audio.nativeaudio;

public class AudioParticleEvent extends SynthEvent {
  private long swigCPtr;

  protected AudioParticleEvent(long cPtr, boolean cMemoryOwn) {
    super(NativeAudioEngineJNI.AudioParticleEvent_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(AudioParticleEvent obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        NativeAudioEngineJNI.delete_AudioParticleEvent(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public AudioParticleEvent(float aFrequency, int aPosition, float aLength, SynthInstrument aInstrument) {
    this(NativeAudioEngineJNI.new_AudioParticleEvent__SWIG_0(aFrequency, aPosition, aLength, SynthInstrument.getCPtr(aInstrument), aInstrument), true);
  }

  public AudioParticleEvent(float aFrequency, SynthInstrument aInstrument, float aLength, float aAttack, float aRelease) {
    this(NativeAudioEngineJNI.new_AudioParticleEvent__SWIG_1(aFrequency, SynthInstrument.getCPtr(aInstrument), aInstrument, aLength, aAttack, aRelease), true);
  }

  public void setFrequency(float aFrequency, boolean allOscillators, boolean storeAsBaseFrequency) {
    NativeAudioEngineJNI.AudioParticleEvent_setFrequency(swigCPtr, this, aFrequency, allOscillators, storeAsBaseFrequency);
  }

  public void calculateBuffers() {
    NativeAudioEngineJNI.AudioParticleEvent_calculateBuffers(swigCPtr, this);
  }

  public void reset() {
    NativeAudioEngineJNI.AudioParticleEvent_reset(swigCPtr, this);
  }

  public void destroy() {
    NativeAudioEngineJNI.AudioParticleEvent_destroy(swigCPtr, this);
  }

}
